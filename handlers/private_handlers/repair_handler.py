import logging
from aiogram import Router, F
from aiogram.enums import ParseMode
from aiogram.types import Message
from keyboards import services_kb

logger = logging.getLogger(__name__)


class RepairHandler:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–†–µ–º–æ–Ω—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è' –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç
    –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–º–æ–Ω—Ç–µ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏ –≥–∞–∑–æ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.
    """

    def __init__(self, router: Router) -> None:
        self.router: Router = router
        self.register_handlers()

    def register_handlers(self) -> None:
        self.router.message.register(
            self.services_callback, F.text == "üîß –†–µ–º–æ–Ω—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è"
        )

    async def services_callback(self, message: Message) -> None:
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–∏—Å–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.

        Args:
            message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ Telegram.
        """
        try:
            user_info = f"ID: {message.from_user.id}, "
            if message.from_user.username:
                user_info += f"Username: @{message.from_user.username}, "
            user_info += f"Name: {message.from_user.first_name}"
            if message.from_user.last_name:
                user_info += f" {message.from_user.last_name}"

            logger.info(f"Services callback received from user: {user_info}")

            await message.delete()

            text = (
                "*–†–µ–º–æ–Ω—Ç –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è:*\n\n"
                "–ú—ã –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–Ω—ã–π —Å–ø–µ–∫—Ç—Ä —Ä–∞–±–æ—Ç –ø–æ —Ä–µ–º–æ–Ω—Ç—É –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É "
                "–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—é –≥–∞–∑–æ–≤—ã—Ö –∫–æ—Ç–ª–æ–≤, –∫–æ–ª–æ–Ω–æ–∫ "
                "–∏ –¥—Ä—É–≥–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è:\n"
                "- –ï–∂–µ–≥–æ–¥–Ω–æ–µ –ø–ª–∞–Ω–æ–≤–æ–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ "
                "–¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∏ –Ω–∞–¥–µ–∂–Ω–æ–π —Ä–∞–±–æ—Ç—ã.\n"
                "- –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–µ–π –∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–π —Ä–µ–º–æ–Ω—Ç –≤—Å–µ—Ö –≤–∏–¥–æ–≤ "
                "–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.\n"
                "- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ—Ç–ª–æ–≤ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –ø—É—Å–∫–µ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã.\n"
                "- –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏ –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ –∫–æ—Ç–ª–∞ –Ω–∞ –∑–∞–º–µ–Ω—É –ø–æ –≤–∞—à–∏–º "
                "–ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º.\n"
                "- –°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è "
                "–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.\n\n"
                "*–ù–∞—à–∏ —Å–µ—Ä–≤–∏—Å–Ω—ã–µ –º–∞—Å—Ç–µ—Ä–∞ –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å:*\n"
                "–ê–Ω–¥—Ä–µ–π: +7 000 000 00 00\n"
                "–ü–∞–≤–µ–ª: +7 000 000 00 00\n\n"
                "_–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –¥–æ–ª–≥—É—é –∏ –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Ä–∞–±–æ—Ç—É –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è, "
                "–∏–∑–±–∞–≤–ª—è—è –≤–∞—Å –æ—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª–æ–º–æ–∫._"
            )

            await message.answer(
                text,
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=services_kb,
            )

            logger.info(
                f"Repair message successfully sent to user "
                f"{message.from_user.id}"
            )

        except Exception as e:
            logger.error(
                f"Unexpected error in services callback for user "
                f"{message.from_user.id}: {e}",
                exc_info=True
            )
            logger.debug({
                "user_id": message.from_user.id,
                "chat_id": getattr(message.chat, "id", "unknown"),
                "error_type": type(e).__name__,
                "error_message": str(e),
            })

            await message.answer(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞", show_alert=False
            )


router = Router()
RepairHandler(router)
