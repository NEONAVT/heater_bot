import logging
from aiogram import Router, F
from aiogram.enums import ParseMode
from aiogram.types import Message
from aiogram.exceptions import TelegramBadRequest
from keyboards import prices_kb

logger = logging.getLogger(__name__)


class PricesHandler:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–°—Ç–æ–∏–º–æ—Å—Ç—å' –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É—Å–ª—É–≥ –∏ –ø–æ—Ä—è–¥–∫–µ —Ä–∞—Å—á–µ—Ç–∞.
    """

    def __init__(self, router: Router) -> None:
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏–π.

        Args:
            router (Router): Aiogram Router –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤.
        """
        self.router: Router = router
        self.register_handlers()

    def register_handlers(self) -> None:
        """
        –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ö–µ–Ω–¥–ª–µ—Ä –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ "üßæ –°—Ç–æ–∏–º–æ—Å—Ç—å".
        """
        self.router.message.register(self.prices, F.text == "üßæ –°—Ç–æ–∏–º–æ—Å—Ç—å")

    async def prices(self, message: Message) -> None:
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É—Å–ª—É–≥.

        Args:
            message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ Telegram.
        """
        try:
            user_id = message.from_user.id
            username = message.from_user.username
            logger.info(f"User {user_id} ({username}) requested prices")
            await message.delete()

            text = (
                "üí∞ *–°—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥*\n\n"
                "–ú—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è –∑–∞–º–µ–Ω–æ–π –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π "
                "–≥–∞–∑–æ–≤—ã—Ö –∫–æ—Ç–ª–æ–≤, –∫–æ–ª–æ–Ω–æ–∫, –±–æ–π–ª–µ—Ä–æ–≤, "
                "–º–æ–Ω—Ç–∞–∂–æ–º —Å–∏—Å—Ç–µ–º –æ—Ç–æ–ø–ª–µ–Ω–∏—è –∏ –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è —Å –Ω—É–ª—è,"
                " –∞ —Ç–∞–∫–∂–µ —Ä–µ–º–æ–Ω—Ç–æ–º —Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∏.\n\n"
                "–ö–∞–∂–¥—ã–π –ø—Ä–æ–µ–∫—Ç —É–Ω–∏–∫–∞–ª–µ–Ω, –ø–æ—ç—Ç–æ–º—É "
                "—Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ "
                "–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–∏—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π –∏ —É—Å–ª–æ–≤–∏–π.\n\n"
                "–í—ã –º–æ–∂–µ—Ç–µ –æ–ø–∏—Å–∞—Ç—å —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –ø—Ä–∏—Å–ª–∞—Ç—å —Ñ–æ—Ç–æ "
                "‚Äî –º—ã –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º "
                "–∑–∞—è–≤–∫—É –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞.\n\n"
                "*üëá–î–ª—è —ç—Ç–æ–≥–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π "
                "'–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ä–∞—Å—á–µ—Ç' –Ω–∏–∂–µ.*\n"
                "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª"
            )

            await message.answer(
                text, parse_mode=ParseMode.MARKDOWN, reply_markup=prices_kb
            )
            logger.info(f"Prices message successfully sent to user {user_id}")

        except TelegramBadRequest as e:
            user_id = message.from_user.id
            if "message is not modified" in str(e):
                logger.debug(
                    f"Message not modified for user {user_id} - same content")
                await message.answer()
            else:
                logger.error(f"TelegramBadRequest for user {user_id}: {e}")
                await message.answer(
                    "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
                    show_alert=False
                )

        except Exception as e:
            user_id = message.from_user.id
            logger.error(
                f"Unexpected error for user {user_id}: {e}",
                exc_info=True
            )
            await message.answer(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞",
                show_alert=False
            )


router = Router()
PricesHandler(router)
