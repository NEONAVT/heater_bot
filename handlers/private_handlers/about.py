import logging
from aiogram import Router, F
from aiogram.enums import ParseMode
from aiogram.types import Message
from aiogram.exceptions import TelegramBadRequest
from keyboards import start_kb

logger = logging.getLogger(__name__)


class AboutHandler:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–û –Ω–∞—Å' –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏.
    """

    def __init__(self, router: Router) -> None:
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏–π.

        Args:
            router (Router): Aiogram Router –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤.
        """
        self.router: Router = router
        self.register_handlers()

    def register_handlers(self) -> None:
        """
        –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ö–µ–Ω–¥–ª–µ—Ä –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ "üë®‚Äçüîß –û –Ω–∞—Å".
        """
        self.router.message.register(self.about, F.text == "üë®‚Äçüîß –û –Ω–∞—Å")

    async def about(self, message: Message) -> None:
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

        Args:
            message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ Telegram.
        """
        try:
            user_id = message.from_user.id
            username = message.from_user.username
            logger.info(f"User {user_id} ({username}) requested info")
            await message.delete()

            text = (
                "*–û –Ω–∞—Å*\n\n"
                "–ú—ã —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º—Å—è –Ω–∞ –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö, "
                "–∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞—é—Ç –¥–æ–º –∏ –±–∏–∑–Ω–µ—Å –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–º–∏ –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏. "
                "–° –∫–æ–Ω—Ü–∞ 90-—Ö –≥–æ–¥–æ–≤ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ –º–µ–Ω—è–µ–º –≥–∞–∑–æ–≤—ã–µ –∫–æ—Ç–ª—ã, "
                "–∫–æ–ª–æ–Ω–∫–∏ –∏ –±–æ–π–ª–µ—Ä—ã, –ø—Ä–æ–µ–∫—Ç–∏—Ä—É–µ–º –∏ –º–æ–Ω—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—ã –æ—Ç–æ–ø–ª–µ–Ω–∏—è "
                "–∏ –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è –ø–æ–¥ –∫–ª—é—á.\n\n"
                "–†–∞–±–æ—Ç–∞–µ–º –∫–∞–∫ —Å —á–∞—Å—Ç–Ω—ã–º–∏ –∫–ª–∏–µ–Ω—Ç–∞–º–∏, —Ç–∞–∫ –∏ —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º–∏. "
                "–î–ª—è –æ–¥–Ω–∏—Ö —ç—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—è —Ç—ë–ø–ª–æ–≥–æ –∏ –Ω–∞–¥—ë–∂–Ω–æ–≥–æ –¥–æ–º–∞, "
                "–¥–ª—è –¥—Ä—É–≥–∏—Ö ‚Äî –±–µ—Å–ø–µ—Ä–µ–±–æ–π–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –æ–±—ä–µ–∫—Ç–∞ –±–µ–∑ –ø—Ä–æ—Å—Ç–æ—è "
                "–∏ –ª–∏—à–Ω–∏—Ö –∑–∞—Ç—Ä–∞—Ç.\n\n"
                "–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ç–æ–ª—å–∫–æ –º–æ–Ω—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ, "
                "–Ω–æ –∏ –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç —Å—Ä–æ–∫ —Å–ª—É–∂–±—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ: "
                "–ø—Ä–æ–º—ã–≤–∞–µ–º —Å–∏—Å—Ç–µ–º—ã –æ—Ç–æ–ø–ª–µ–Ω–∏—è –∏ –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è, "
                "—á–∏—Å—Ç–∏–º –±–æ–π–ª–µ—Ä—ã, —É—Å—Ç—Ä–∞–Ω—è–µ–º –∑–∞—Å–æ—Ä—ã "
                "–∏ –ø–æ–≤—ã—à–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã.\n\n"
                "–û–ø—ã—Ç –±–æ–ª–µ–µ 25 –ª–µ—Ç ‚Äî —ç—Ç–æ —É–º–µ–Ω–∏–µ —Ä–µ—à–∞—Ç—å –∑–∞–¥–∞—á–∏ "
                "—Ä–∞–∑–Ω–æ–≥–æ –º–∞—Å—à—Ç–∞–±–∞: –æ—Ç –∫–≤–∞—Ä—Ç–∏—Ä—ã –∏ –∫–æ—Ç—Ç–µ–¥–∂–∞ –¥–æ "
                "–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–æ–º–µ—â–µ–Ω–∏—è. –ú—ã –∑–Ω–∞–µ–º, —á—Ç–æ –æ—Ç "
                "–∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö —Å–µ—Ç–µ–π –∑–∞–≤–∏—Å–∏—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∂–∏–∑–Ω–∏, "
                "–∏ –ø–æ—ç—Ç–æ–º—É –¥–µ–ª–∞–µ–º –∏—Ö –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –Ω–∞–¥—ë–∂–Ω—ã–º–∏, "
                "—ç–∫–æ–Ω–æ–º–∏—á–Ω—ã–º–∏ –∏ –ø—Ä–æ—Å—Ç—ã–º–∏ –≤ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏."
            )

            await message.answer(
                text,
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=start_kb)
            logger.info(f"About message successfully sent to user {user_id}")

        except TelegramBadRequest as e:
            user_id = message.from_user.id
            if "message is not modified" in str(e):
                logger.debug(
                    f"Message not modified for user {user_id} - same content"
                )
                await message.answer()
            else:
                logger.error(f"TelegramBadRequest for user {user_id}: {e}")
                await message.answer(
                    "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è",
                    show_alert=False
                )

        except Exception as e:
            user_id = message.from_user.id
            logger.error(
                f"Unexpected error for user {user_id}: {e}",
                exc_info=True
            )
            await message.answer(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞",
                show_alert=False
            )


router = Router()
AboutHandler(router)
